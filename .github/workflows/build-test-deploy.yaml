name: Deploy
on: 
  push:
    branches:
      - master
      - test

jobs:
  lint:
    name: Format and lint
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: true

      - uses: actions/setup-go@v2
        with:
          go-version: ^1.17

      - name: Lint
        run: make lint

      - name: Format
        run: make fmt && git diff --quiet

      - name: Goimports
        run: make goimports && git diff --quiet
  
  build:
    name: build docker image
    runs-on: ubuntu-20.04
    needs: 
      - lint

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: true

      - uses: docker/login-action@v1
        name: login to ghcr
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: create .env
        env:
          IMAGE_DB: ${{ secrets.IMAGE_DB }}
          IMAGE_APP: ${{ secrets.IMAGE_APP }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          PORT: ${{ secrets.PORT }}
          API_SECRET: ${{ secrets.API_SECRET }}
          API_SECRET_HEADER: ${{ secrets.API_SECRET_HEADER }}
          ENV: ${{ secrets.ENV }}

        run: |
          echo "IMAGE_DB=${IMAGE_DB}" >> .env
          echo "IMAGE_APP=${IMAGE_APP}" >> .env
          echo "POSTGRES_HOST=${POSTGRES_HOST}" >> .env
          echo "POSTGRES_PORT=${POSTGRES_PORT}" >> .env
          echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" >> .env
          echo "POSTGRES_USER=${POSTGRES_USER}" >> .env
          echo "POSTGRES_DB=${POSTGRES_DB}" >> .env
          echo "PORT=${PORT}" >> .env
          echo "API_SECRET=${API_SECRET}" >> .env
          echo "API_SECRET_HEADER=${API_SECRET_HEADER}" >> .env
          echo "ENV=${ENV}" >> .env

      - name: build and push images
        run: |
          make build push

  deploy:
    name: run the app
    runs-on: self-hosted
    needs: 
      - build
    
    steps:
      - uses: actions/checkout@v2.3.4
        with: 
          ref: ci
          submodules: true
      
      - uses: docker/login-action@v1
        name: login to ghcr
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: create .env
        env:
          IMAGE_DB: ${{ secrets.IMAGE_DB }}
          IMAGE_APP: ${{ secrets.IMAGE_APP }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          PORT: ${{ secrets.PORT }}
          API_SECRET: ${{ secrets.API_SECRET }}
          API_SECRET_HEADER: ${{ secrets.API_SECRET_HEADER }}
          ENV: ${{ secrets.ENV }}

        run: |
          echo "IMAGE_DB=${IMAGE_DB}" >> .env
          echo "IMAGE_APP=${IMAGE_APP}" >> .env
          echo "POSTGRES_HOST=${POSTGRES_HOST}" >> .env
          echo "POSTGRES_PORT=${POSTGRES_PORT}" >> .env
          echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" >> .env
          echo "POSTGRES_USER=${POSTGRES_USER}" >> .env
          echo "POSTGRES_DB=${POSTGRES_DB}" >> .env
          echo "PORT=${PORT}" >> .env
          echo "API_SECRET=${API_SECRET}" >> .env
          echo "API_SECRET_HEADER=${API_SECRET_HEADER}" >> .env
          echo "ENV=${ENV}" >> .env

      - name: run app
        run: make pull down up
